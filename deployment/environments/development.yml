# Development Environment Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: bible-daily-dev-config
  namespace: development
data:
  # Application Configuration
  NODE_ENV: "development"
  PORT: "3000"
  
  # Database Configuration
  DB_HOST: "mysql-dev.bible-daily.svc.cluster.local"
  DB_PORT: "3306"
  DB_DATABASE: "bible_daily_dev"
  
  # Redis Configuration
  REDIS_HOST: "redis-dev.bible-daily.svc.cluster.local"
  REDIS_PORT: "6379"
  
  # External Services
  GOOGLE_CALLBACK_URL: "https://api-dev.bible-daily.com/auth/google/callback"
  
  # Frontend Configuration
  VITE_API_URL: "https://api-dev.bible-daily.com/api"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bible-daily-backend-dev
  namespace: development
  labels:
    app: bible-daily-backend
    environment: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bible-daily-backend
      environment: development
  template:
    metadata:
      labels:
        app: bible-daily-backend
        environment: development
    spec:
      containers:
      - name: backend
        image: ghcr.io/your-org/bible-daily/backend:develop
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: bible-daily-dev-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: bible-daily-dev-config
              key: PORT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: bible-daily-dev-config
              key: DB_HOST
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: bible-daily-dev-secrets
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bible-daily-dev-secrets
              key: DB_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: bible-daily-dev-secrets
              key: JWT_SECRET
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: bible-daily-backend-dev
  namespace: development
spec:
  selector:
    app: bible-daily-backend
    environment: development
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bible-daily-backend-dev
  namespace: development
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://dev.bible-daily.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization"
spec:
  tls:
  - hosts:
    - api-dev.bible-daily.com
    secretName: bible-daily-backend-dev-tls
  rules:
  - host: api-dev.bible-daily.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bible-daily-backend-dev
            port:
              number: 80
