services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    platform: linux/arm64
    container_name: bible-daily-mysql-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./backend/database/init:/docker-entrypoint-initdb.d
      - /opt/bible-daily/backups:/backups
    ports:
      - "3306:3306"
    networks:
      - bible-daily-prod-network
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=512M
      --max-connections=200
      --slow-query-log=1
      --slow-query-log-file=/var/log/mysql/slow.log
      --long-query-time=2
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${DB_ROOT_PASSWORD}",
        ]
      timeout: 20s
      retries: 10
      interval: 30s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    platform: linux/arm64
    container_name: bible-daily-redis-prod
    restart: unless-stopped
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_prod_data:/data
      - /opt/bible-daily/logs:/var/log/redis
    ports:
      - "6379:6379"
    networks:
      - bible-daily-prod-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 3s
      retries: 5
      interval: 30s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Backend API
  backend:
    image: ${BACKEND_IMAGE:-ghcr.io/davidwin3/bible-daily/backend:latest}
    platform: linux/arm64
    container_name: bible-daily-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CALLBACK_URL: ${GOOGLE_CALLBACK_URL}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_PRIVATE_KEY_ID: ${FIREBASE_PRIVATE_KEY_ID}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
      FIREBASE_CLIENT_ID: ${FIREBASE_CLIENT_ID}
      FIREBASE_AUTH_URI: ${FIREBASE_AUTH_URI:-https://accounts.google.com/o/oauth2/auth}
      FIREBASE_TOKEN_URI: ${FIREBASE_TOKEN_URI:-https://oauth2.googleapis.com/token}
      VAPID_PUBLIC_KEY: ${VAPID_PUBLIC_KEY}
      VAPID_PRIVATE_KEY: ${VAPID_PRIVATE_KEY}
      CORS_ORIGIN: ${CORS_ORIGIN}
      LOG_LEVEL: info
      LOG_FORMAT: json
    volumes:
      - /opt/bible-daily/logs:/app/logs
      - /opt/bible-daily/uploads:/app/uploads
    ports:
      - "3000:3000"
    networks:
      - bible-daily-prod-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.5"
        reservations:
          memory: 512M
          cpus: "0.25"

  # Frontend Application
  frontend:
    image: ${FRONTEND_IMAGE:-ghcr.io/davidwin3/bible-daily/frontend:latest}
    platform: linux/arm64
    container_name: bible-daily-frontend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      REACT_APP_API_URL: https://${DOMAIN}/api
      REACT_APP_VERSION: ${BUILD_VERSION}
    volumes:
      - /opt/bible-daily/logs:/var/log/nginx
    ports:
      - "80:80"
    networks:
      - bible-daily-prod-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      timeout: 10s
      retries: 3
      interval: 30s
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.25"
        reservations:
          memory: 256M
          cpus: "0.1"

  # 로그 수집기 (선택사항)
  # logrotate:
  #   image: linkyard/docker-logrotate
  #   platform: linux/arm64
  #   container_name: bible-daily-logrotate-prod
  #   restart: unless-stopped
  #   volumes:
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     - /opt/bible-daily/logs:/logs
  #   environment:
  #     LOGS_DIRECTORIES: "/logs"
  #     LOGROTATE_INTERVAL: daily
  #     LOGROTATE_COPIES: 7
  #     LOGROTATE_SIZE: 100M
  #   networks:
  #     - bible-daily-prod-network

volumes:
  mysql_prod_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/bible-daily/data/mysql

  redis_prod_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/bible-daily/data/redis

networks:
  bible-daily-prod-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
